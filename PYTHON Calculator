# Python program to  create a simple GUI  
# calculator using Tkinter

# import everything from tkinter module
from tkinter import *
#import everything from math module
import math

numbers = ""
total = 0

def croot():
    """This function returns the cuberoot of the given number"""
    try:
        global numbers
        numbers = int(numbers)
        total = numbers**(1. / 3)
        equation.set(total)
    except:
        numbers = "Syntax Error"
        
def press(num):
    """This function displays the numbers entered"""
    global total
    global numbers
    numbers = numbers + str(num) 
    equation.set(numbers)
  
def equalpress():
    """This function return  the total of the given equation"""
    try: 
        global numbers
        global total
        total = str(eval(numbers)) 
        equation.set(total) 
        numbers = "" 
    except: 
        equation.set(" error ")
        numbers = "" 
  
def clear():
    """This function clears all the entered numbers and operation"""
    global total
    global numbers
    numbers = "" 
    equation.set(numbers)
    
def dele():
    """This function delete the last entered value"""
    global numbers
    numbers = list(numbers)
    if len(numbers)==0:
        numbers = ""
    else:
      del numbers[-1]
      numbers = "".join(numbers)
      equation.set(numbers)

def squareroot():
    """This function returns the squareroot of the given number"""
    try:    
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = math.sqrt(int(numbers))
            equation.set(total)
        else:
            numbers = float(numbers)
            total = math.sqrt(float(numbers))
            equation.set(total)
    except:
        numbers = 'Syntax Error'

def fact():
    """This function returns the factorial of the given number"""
    try:    
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = math.factorial(int(numbers))
            equation.set(total)
        else:
            numbers = float(numbers)
            total = math.factorial(float(numbers))
            equation.set(total)
    except:
        numbers = 'Syntax Error'

def sine():
    """This function returns the sinetheta of the given number"""
    try:    
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = math.sin(int(numbers))
            equation.set(total)
        else:
            numbers = float(numbers)
            total = math.sin(float(numbers))
            equation.set(total)
    except:
        numbers = 'Syntax Error'

def cosine():
    """This function returns the cosine of the given number"""
    try:
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = math.cos(int(numbers))
            equation.set(total)
        else:
            numbers = float(numbers)
            total = math.cos(float(numbers))
            equation.set(total)
    except:
        numbers = 'Syntax Error'

def tan():
    """This function returns the tangent of the given number"""
    try:
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = math.tan(int(numbers))
            equation.set(total)
        else:
            numbers = float(numbers)
            total = math.tan(float(numbers))
            equation.set(total)
    except:
        numbers = 'Syntax Error'

def sqr():
    """This function returns the square value of the given number"""
    try:
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = int(numbers) ** 2
            equation.set(total)
        else:
            numbers = float(numbers)
            total = float(numbers) ** 2
            equation.set(total)
    except:
        numbers = 'Syntax Error'

def logs():
    """This function returns the logarithmic of the given number"""
    #measured a radians
    try:    
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = math.log10(int(numbers))
            equation.set(total)
        else:
            numbers = float(numbers)
            total = math.log10(float(numbers))
            equation.set(total)
    except:
        numbers = 'Syntax Error'

def convert1():
    """This function convert  celsius to farenheit """
    try:
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = (int(numbers) * (9/5)) + 32
            equation.set(total)
        else:
            numbers = float(numbers)
            total = (float(numbers) * (9/5)) + 32
            equation.set(total)
    except:
        numbers = 'Syntax Error'        



def pi():
    """This function returns the constant value of pi"""
    try:
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = int(numbers) * 3.141592
            equation.set(total)
        else:
            numbers = float(numbers)
            total = float(numbers) * 3.141592
            equation.set(total)
    except:
        numbers = 'Syntax Error'

def convert():
    """This function convert farenheit to celsius """
    try:
        global total
        global numbers
        if isinstance(numbers, int):
            numbers = int(numbers)
            total = (int(numbers)-32)* (5/9)
            equation.set(total)
        else:
            numbers = float(numbers)
            total = (float(numbers)-32)* (5/9)
            equation.set(total)
    except:
        numbers = 'Syntax Error'


#Drivers Code 
if __name__ == "__main__":
    # create a GUI window 
    gui = Tk()
    #This is my background color
    gui.configure(background="#030000")
    #This is the title of my GUI window
    gui.title("THE SCIENTIFIC CALCULATOR")
    #This is the configuration of my GUI window
    gui.geometry("666x410")
    # StringVar() is the variable class we create an instance of this class
    equation = StringVar()
    # create the text entry box for showing the expression . 
    numbers_field = Entry(gui, textvariable=equation)
    # grid method is used for placing the widgets at respective positions in table like structure .
    numbers_field.grid(columnspan=200, ipadx=190, pady=20, ipady=10) 
    equation.set('')
#This is the button for numbers and operations in my scientific calculator
    ac = Button(gui, text='DEL ', fg='black', bg='#D6DBDF',
                   command=dele, height=2, width=17) 
    ac.grid(row=6,column=4, pady=3, ipadx=1)

    button0 = Button(gui, text=' 0 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(0), height=2, width=17) 
    button0.grid(row=7, column=1, pady=3, ipadx=1)

    button1 = Button(gui, text=' 1 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(1), height=2, width=17) 
    button1.grid(row=6, column=1, pady=3, ipadx=1) 
  
    button2 = Button(gui, text=' 2 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(2), height=2, width=17) 
    button2.grid(row=6, column=2, pady=3, ipadx=1) 
  
    button3 = Button(gui, text=' 3 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(3), height=2, width=17) 
    button3.grid(row=6, column=3, pady=3, ipadx=1) 
  
    button4 = Button(gui, text=' 4 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(4), height=2, width=17) 
    button4.grid(row=5, column=1, pady=3, ipadx=1) 
  
    button5 = Button(gui, text=' 5 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(5), height=2, width=17) 
    button5.grid(row=5, column=2, pady=3, ipadx=1) 
  
    button6 = Button(gui, text=' 6 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(6), height=2, width=17) 
    button6.grid(row=5, column=3, pady=3, ipadx=1) 
  
    button7 = Button(gui, text=' 7 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(7), height=2, width=17) 
    button7.grid(row=4, column=1, pady=3, ipadx=1) 
    
    button8 = Button(gui, text=' 8 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(8), height=2, width=17) 
    button8.grid(row=4, column=2, pady=3, ipadx=1) 
  
    button9 = Button(gui, text=' 9 ', fg='black', bg='#FCF3CF', 
                     command=lambda: press(9), height=2, width=17) 
    button9.grid(row=4, column=3, pady=3, ipadx=1) 
    
    clear = Button(gui, text='CLEAR', fg='black', bg='#D6DBDF', 
                    command=clear, height=2, width=17) 
    clear.grid(row=5, column=4, pady=3, ipadx=1)
    
    close= Button(gui, text=' CLOSE ', fg='white', bg='red', 
                     command=lambda: press(exit()),height=2, width=17) 
    close.grid(row=7, column=4, pady=3, ipadx=1)

    conversion = Button(gui, text='ºF to ºC', fg='black', bg='#D6DBDF', 
                    command=convert, height=2, width=17) 
    conversion.grid(row=3, column=4, pady=3, ipadx=1)

    conversion1 = Button(gui, text='ºC to ºF', fg='black', bg='#D6DBDF', 
                    command=convert1, height=2, width=17) 
    conversion1.grid(row=2, column=4, pady=3, ipadx=1)

    cos = Button(gui, text='cos', fg='black', bg='#D6DBDF', 
                    command=cosine, height=2, width=17) 
    cos.grid(row=3, column=0, pady=3, ipadx=1)

    croot = Button(gui, text='3√', fg='black', bg='#D6DBDF', 
                    command=croot, height=2, width=17) 
    croot.grid(row=4, column=4, pady=3, ipadx=1)
    
    divide = Button(gui, text=' / ', fg='black', bg='#D6DBDF', 
                    command=lambda: press("/"), height=2, width=17) 
    divide.grid(row=7, column=0, pady=3, ipadx=1)

    equal = Button(gui, text=' = ', fg='black', bg='#FCF3CF', 
                   command=equalpress, height=2, width=17)
    equal.grid(row=7, column=3, pady=3, ipadx=1) 

    factorial = Button(gui, text='x!', fg='black', bg='#D6DBDF', 
                    command=fact, height=2, width=17) 
    factorial.grid(row=2, column=0, pady=3, ipadx=1)

    log = Button(gui, text='log', fg='black', bg='#D6DBDF', 
                    command=logs, height=2, width=17) 
    log.grid(row=3, column=2, pady=3, ipadx=1)

    minus = Button(gui, text=' - ', fg='black', bg='#D6DBDF', 
                   command=lambda: press("-"), height=2, width=17) 
    minus.grid(row=5, column=0, pady=3, ipadx=1) 
  
    multiply = Button(gui, text=' * ', fg='black', bg='#D6DBDF', 
                      command=lambda: press("*"), height=2, width=17) 
    multiply.grid(row=6, column=0, pady=3, ipadx=1)

    Pi = Button(gui, text='π', fg='black', bg='#D6DBDF', 
                    command=pi, height=2, width=17) 
    Pi.grid(row=2, column=3, pady=3, ipadx=1)

    plus = Button(gui, text=' + ', fg='black', bg='#D6DBDF', 
                  command=lambda: press("+"), height=2, width=17) 
    plus.grid(row=4, column=0, pady=3, ipadx=1) 
  
    point = Button(gui, text=' . ', fg='black', bg='#FCF3CF', 
                    command=lambda: press("."), height=2, width=17) 
    point.grid(row=7,column=1, columnspan=3, pady=3, ipadx=1)

    sin = Button(gui, text='sin', fg='black', bg='#D6DBDF', 
                    command=sine, height=2, width=17) 
    sin.grid(row=2, column=2, pady=3, ipadx=1)

    square = Button(gui, text='x^2', fg='black', bg='#D6DBDF', 
                    command=sqr, height=2, width=17) 
    square.grid(row=3, column=3, pady=3, ipadx=1)

    squareroots = Button(gui, text='√', fg='black', bg='#D6DBDF', 
                    command=squareroot, height=2, width=17) 
    squareroots.grid(row=2, column=1, pady=3, ipadx=1)

    Tan = Button(gui, text='tan', fg='black', bg='#D6DBDF', 
                    command=tan, height=2, width=17) 
    Tan.grid(row=3, column=1, pady=3, ipadx=1)  

#You may now start the this calculator
    gui.mainloop()
